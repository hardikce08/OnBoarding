@model CU.OnBoarding.DataAccess.Model.User

@{
    ViewBag.Title = "Edit User";
    ViewBag.PageName = "Add/Edit User";
}
<style>
    .sbp-preview {
        border-radius: 0.35rem;
        border: 0.25rem solid #e3e6ec;
        border-style: solid;
    }
</style>
<div class="container-fluid">
    <!-- Page Heading -->
    @*<h1 class="h3 mb-4 text-gray-800">Users</h1>*@
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            @*<a href="~/Admin/Users/0" class="mb-xs mt-xs mr-xs btn btn-primary"><i class="fas fa-user-plus"></i>  Add New User</a>*@
        </div>
        <div class="card-body">
            <div class="sbp-preview1">
                @using (Html.BeginForm("EditUser", "User", FormMethod.Post, new { @id = "EditUser", @class = "form-horizontal form-bordered", onsubmit = "showLoader(this);" }))
                {
                    @Html.HiddenFor(model => model.UserID)
                    <div class="row  col-md-9 form-group">
                        <label class="col-md-3 control-label">Email Address</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @required = "", oninvalid = "this.setCustomValidity('Please Enter valid email')", oninput = "setCustomValidity('')" } })
                        </div>
                    </div>
                    <div class="row col-md-9 form-group">
                        <label class="col-md-3 control-label">First Name</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "", oninvalid = "this.setCustomValidity('Please Enter First Name')", oninput = "setCustomValidity('')" } })
                        </div>
                    </div>
                    <div class="row col-md-9 form-group">
                        <label class="col-md-3 control-label">Last Name</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "", oninvalid = "this.setCustomValidity('Please Enter Last Name')", oninput = "setCustomValidity('')" } })
                        </div>
                    </div>
                    <div class="row col-md-9 form-group">
                        <label class="col-md-3 control-label">Contact Number</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    if (Model == null)
                    {
                        <div class="row  col-md-9 form-group">
                            <label class="col-md-3 control-label">Password</label>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @required = "", oninvalid = "this.setCustomValidity('Please Enter valid password')", oninput = "setCustomValidity('')" } })
                            </div>
                        </div>
                    }
                    <div class="row col-md-9 form-group">
                        <label class="col-md-3 control-label"></label>
                        <div class="col-md-6">
                            <button type="submit" class="mb-xs mt-xs mr-xs btn btn-primary">Submit</button>
                            <a href="~/Admin/Users" class="mb-xs mt-xs mr-xs btn btn-danger">Cancel</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>




